import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Percorso della cartella dei sample files
const sampleFilesDir = path.resolve(__dirname, 'sample-files');
// Percorso del file di output
const outputFile = path.resolve(__dirname, 'sample-files-data.js');

/**
 * Comprime il contenuto di un file rimuovendo commenti e spazi non necessari
 * @param {string} content - Contenuto del file
 * @param {string} file - Nome del file
 * @returns {string} - Contenuto compresso
 */
function compressContent(content, file) {
  // Mantieni il commento di generazione
  const generatedComment = '// This file was generated by @ciffi-js/releaser.';
  
  // Per i file JavaScript/JSON
  if (file.endsWith('.js') || file.endsWith('.json') || file.endsWith('.mjs')) {
    // Rimuovi commenti e spazi non necessari, ma mantieni il commento di generazione
    let compressed = content;
    
    // Mantieni il commento di generazione se presente
    if (compressed.includes(generatedComment)) {
      compressed = generatedComment + '\n' + 
                  compressed.replace(generatedComment, '').trim();
    }
    
    return compressed;
  }
  
  // Per i file di configurazione come .editorconfig, .prettierignore, ecc.
  return content;
}

/**
 * Genera il file dei dati dei sample files
 */
function generateSampleFilesData() {
  console.log('üìù Generazione del file dei dati dei sample files...');
  
  try {
    // Leggi tutti i file nella directory
    const files = fs.readdirSync(sampleFilesDir);
    
    // Inizia a costruire il contenuto del file
    let fileContent = `// Automatically generated file ${new Date().toISOString()}

export const sampleFiles = {`;
    
    // Aggiungi ogni file al contenuto
    files.forEach(file => {
      const filePath = path.join(sampleFilesDir, file);
      
      // Salta le directory
      if (fs.statSync(filePath).isDirectory()) {
        return;
      }
      
      // Leggi il contenuto del file
      const content = fs.readFileSync(filePath, 'utf8');
      
      // Comprimi il contenuto
      const compressedContent = compressContent(content, file);
      
      // Aggiungi il file al contenuto (senza spazi extra e nuove linee)
      fileContent += `"${file}":\`${compressedContent.replace(/`/g, '\\`')}\`,`;
    });
    
    // Chiudi l'oggetto
    fileContent += '};';
    
    // Scrivi il file
    fs.writeFileSync(outputFile, fileContent);
    
    console.log(`‚úÖ File dei dati generato con successo: ${outputFile}`);
  } catch (error) {
    console.error(`‚ùå Errore durante la generazione del file dei dati: ${error.message}`);
    process.exit(1);
  }
}

// Esegui la funzione
generateSampleFilesData();
